{"ast":null,"code":"export const loadingData = () => ({\n  type: 'LOADING'\n});\nexport const successData = products => ({\n  type: 'SUCCESS',\n  payload: {\n    products\n  }\n});\nexport const errorData = error => ({\n  type: 'ERROR',\n  payload: {\n    error\n  }\n});\n\nfunction fakeGetProducts() {\n  return new Promise(resolve => {\n    // Resolve after a timeout so we can see the loading indicator\n    setTimeout(() => resolve({\n      products: [{\n        id: 0,\n        name: \"Apple\"\n      }, {\n        id: 1,\n        name: \"Bananas\"\n      }, {\n        id: 2,\n        name: \"Strawberries\"\n      }]\n    }), 1000);\n  });\n}\n\nexport function fetchProducts() {\n  return dispatch => {\n    dispatch(loadingData());\n    return fakeGetProducts().then(json => {\n      dispatch(successData(json.products));\n      return json.products;\n    }).catch(error => dispatch(errorData(error)));\n  };\n}","map":{"version":3,"sources":["/Users/mamed/Desktop/react/redux_fetching/src/redux/actions.js"],"names":["loadingData","type","successData","products","payload","errorData","error","fakeGetProducts","Promise","resolve","setTimeout","id","name","fetchProducts","dispatch","then","json","catch"],"mappings":"AACA,OAAO,MAAMA,WAAW,GAAG,OAAO;AAC9BC,EAAAA,IAAI,EAAE;AADwB,CAAP,CAApB;AAIP,OAAO,MAAMC,WAAW,GAAGC,QAAQ,KAAK;AACpCF,EAAAA,IAAI,EAAE,SAD8B;AAEpCG,EAAAA,OAAO,EAAE;AAAED,IAAAA;AAAF;AAF2B,CAAL,CAA5B;AAKP,OAAO,MAAME,SAAS,GAAGC,KAAK,KAAK;AAC/BL,EAAAA,IAAI,EAAE,OADyB;AAE/BG,EAAAA,OAAO,EAAE;AAAEE,IAAAA;AAAF;AAFsB,CAAL,CAAvB;;AAMP,SAASC,eAAT,GAA2B;AACvB,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC1B;AACAC,IAAAA,UAAU,CACN,MACID,OAAO,CAAC;AACJN,MAAAA,QAAQ,EAAE,CACN;AACIQ,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,IAAI,EAAE;AAFV,OADM,EAKN;AACID,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,IAAI,EAAE;AAFV,OALM,EASN;AACID,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,IAAI,EAAE;AAFV,OATM;AADN,KAAD,CAFL,EAkBN,IAlBM,CAAV;AAoBH,GAtBM,CAAP;AAuBH;;AAED,OAAO,SAASC,aAAT,GAAyB;AAC5B,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACd,WAAW,EAAZ,CAAR;AACA,WAAOO,eAAe,GACjBQ,IADE,CACGC,IAAI,IAAI;AACVF,MAAAA,QAAQ,CAACZ,WAAW,CAACc,IAAI,CAACb,QAAN,CAAZ,CAAR;AACA,aAAOa,IAAI,CAACb,QAAZ;AACH,KAJE,EAKFc,KALE,CAKIX,KAAK,IACRQ,QAAQ,CAACT,SAAS,CAACC,KAAD,CAAV,CANT,CAAP;AAQH,GAVD;AAWH","sourcesContent":["\nexport const loadingData = () => ({\n    type: 'LOADING'\n});\n\nexport const successData = products => ({\n    type: 'SUCCESS',\n    payload: { products }\n});\n\nexport const errorData = error => ({\n    type: 'ERROR',\n    payload: { error }\n});\n\n\nfunction fakeGetProducts() {\n    return new Promise(resolve => {\n        // Resolve after a timeout so we can see the loading indicator\n        setTimeout(\n            () =>\n                resolve({\n                    products: [\n                        {\n                            id: 0,\n                            name: \"Apple\"\n                        },\n                        {\n                            id: 1,\n                            name: \"Bananas\"\n                        },\n                        {\n                            id: 2,\n                            name: \"Strawberries\"\n                        }\n                    ]\n                }),\n            1000\n        );\n    });\n}\n\nexport function fetchProducts() {\n    return dispatch => {\n        dispatch(loadingData());\n        return fakeGetProducts()\n            .then(json => {\n                dispatch(successData(json.products));\n                return json.products;\n            })\n            .catch(error =>\n                dispatch(errorData(error))\n            );\n    };\n}\n"]},"metadata":{},"sourceType":"module"}